# -*- coding: utf-8 -*-
#
# This file is part of CERN Analysis Preservation Framework.
# Copyright (C) 2016, 2017 CERN.
#
# CERN Analysis Preservation Framework is free software; you can redistribute
# it and/or modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2 of the
# License, or (at your option) any later version.
#
# CERN Analysis Preservation Framework is distributed in the hope that it will
# be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CERN Analysis Preservation Framework; if not, write to the
# Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
# MA 02111-1307, USA.
#
# In applying this license, CERN does not
# waive the privileges and immunities granted to it by virtue of its status
# as an Intergovernmental Organization or submit itself to any jurisdiction.


version: '2.1'
services:
  # Web Application
  web:
    extends:
      file: docker-services.yml
      service: app
    build:
      context: .
      args:
        DEBUG: "True"
    depends_on:
      - postgresql
      - rabbitmq
      - elasticsearch
      - redis
      - wdb
    command: gunicorn -b 0.0.0.0:5000 --log-level debug  cap.wsgi:application --reload
    volumes:
      - ".:/code"
    ports:
      - "5000:5000"

  # Application Worker
  worker:
    extends:
      file: docker-services.yml
      service: app
    build:
      context: .
      args:
        DEBUG: "True"
    command: 'celery worker -A cap.celery --loglevel=INFO'
    volumes:
      - ".:/code"
      - "/usr/local/var/data"
    depends_on:
      - redis
      - postgresql
      - rabbitmq
      - elasticsearch
      - wdb
  # Base services
  redis:
    extends:
        file: docker-services.yml
        service: redis

  postgresql:
    extends:
        file: docker-services.yml
        service: postgresql
    environment:
      - POSTGRES_DB=cap
      - POSTGRES_USER=cap
      - POSTGRES_PASSWORD=cap
  elasticsearch:
    extends:
        file: docker-services.yml
        service: elasticsearch

  rabbitmq:
    extends:
      file: docker-services.yml
      service: rabbitmq

  nginx:
      restart: "always"
      build: ./docker/nginx
      image: cap/nginx
      ports:
        - "80:80"
      links:
        - web

  # DevTools (wdb, redis-commander, flower)
  wdb:
    extends:
      file: docker-services.yml
      service: wdb
  redis-commander:
    extends:
      file: docker-services.yml
      service: redis-commander
  flower:
    extends:
      file: docker-services.yml
      service: app
    build:
      context: .
      args:
        DEBUG: "True"
    command: 'flower -A cap.celery --port=5555'
    volumes:
      - ".:/code"
    depends_on:
      - redis
      - postgresql
      - rabbitmq
      - elasticsearch
    ports:
      - "49555:5555"
